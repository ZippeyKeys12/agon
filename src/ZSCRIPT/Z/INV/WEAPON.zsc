enum ZE_WeaponInfo{
    // Weapon Type
    WPN_MELEE       =   1<<0,
    WPN_RANGED      =   1<<1,
    // General Types
    WPN_AMMO        =   1<<2,
    // Melee Types
    WPN_STAB        =   1<<3,
    WPN_SLICE       =   1<<4,
    // Ranged Types
    WPN_HITSCAN     =   1<<5,
    WPN_RAIL        =   1<<6,
    WPN_FLAMER      =   1<<7,
}

class ZWeapon:StateProvider{
    int Damage,
        CritDmg,
        Durability,
        MaxDurability;

    double BaseCritMult;

    ZE_WeaponInfo Info;

    ZItem Data;

    Property Damage: Damage;
    Property CritDamage: CritDmg;
    Property Durability: Durability;
    Property CritMultiplier: BaseCritMult;

    [Property]{
        [Flags]
        NoSector=true;
        NoInteraction=true;
        [ZWeapon]
        Damage=0;
        CritDamage=0;
        Durability=0;
        CritMultiplier=0;
    }

    States{
        RSelect:    stop;
        LSelect:    stop;
        RDeselect:  stop;
        LDeselect:  stop;
        RReady:     stop;
        LReady:     stop;
        RFire:      stop;
        LFire:      stop;
    }

    static
    ZWeapon Instance(Class<ZWeapon> Name='ZWeapon'){
        ActorIterator it=ActorIterator.Create(TID_WEAPS, Name);
        return ZWeapon(it.Next());
    }

    static
    ZWeapon Create(Name ID, String Name, String Description, int Price, int Damage, int CritDmg, int Durability, double BaseCritMult){
        ZWeapon Weapon=ZWeapon(spawn('ZWeapon'));
        Weapon.Data=ZItem.Create(ID, Name, Description, Price, Weapon);
        Weapon.Damage=Damage;
        Weapon.CritDmg=CritDmg;
        Weapon.Durability=Durability;
        return Weapon;
    }

    override
    void BeginPlay(){
        super.BeginPlay();
        ChangeTID(TID_WEAPS);
    }

    clearscope
    int, int GetDurability() const
    {return Durability, MaxDurability;}

    clearscope
    double CriticalMultiplier() const
    {return BaseCritMult*Durability/MaxDurability;}
}