extend
class ZMarine{
    override
    void HandleArmorMovement()
    {MStats.HandleMovement(self);}

    override
    double GetAirControl() const
    {return 5/11.;}

    override
    double CheckSprint(){
        if(!Player.OnGround)return 1;
        // Sprinting
        if((~Buttons & BT_BACK) && (~Buttons & BT_CROUCH) && (Buttons & BT_SPEED) && (Buttons & BT_FORWARD) && (Health>=RunHealth) && (MStats.Energy>MStats.SprintCost)){
            MStats.Recharger=0;
            MStats.Energy-=MStats.SprintCost;
            return MStats.SprintMultiplier;
        // Backstep
        }else if(Buttons & BT_BACK)
            return SideMove1;
        else
            return 1;
    }

    override
    void CheckClamber(){
        Vector3 LastPos=Pos;
        SetXYZ(Pos+(0, 0, MaxLedgeHeight));
        LedgeHeight=GetZAt(Radius+4)-LastPos.Z;
        SetXYZ(LastPos);
        bool Jumping=Buttons & BT_JUMP;
        if(!MidClamber){
            MidClamber=Player.JumpTics!=0 && Vel.Z<=0 && (Player.CrouchOffset!=0)*MaxStepHeight<LedgeHeight && LedgeHeight<=MaxLedgeHeight;
        }else{
            if(LedgeHeight>MaxLedgeHeight)
                MidClamber=false;
            else if(LedgeHeight<=MaxStepHeight){
                MidClamber=false;
                Vel.xy+=2*FrontVector;
            }
        }
        if(MidClamber)
            Vel=(0, 0, (ledgeHeight<=maxStepHeight)?0:MStats.ClamberSpeed);
    }
}